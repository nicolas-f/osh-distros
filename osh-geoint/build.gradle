apply from: gradle.oshCoreDir + '/common.gradle'
version = oshCoreVersion

dependencies {
  compile 'org.sensorhub:sensorhub-core:' + oshCoreVersion
  compile 'org.sensorhub:sensorhub-service-swe:' + oshCoreVersion
  compile 'org.sensorhub:sensorhub-storage-perst:' + oshCoreVersion
  compile 'org.sensorhub:sensorhub-webui-core:' + oshCoreVersion
  compile 'org.sensorhub:sensorhub-tools:' + oshCoreVersion
  compile 'org.sensorhub:sensorhub-driver-fakeweather:[0.1,2.0)'
  compile 'org.sensorhub:sensorhub-storage-es:[0.1,2.0)'
  compile 'org.sensorhub:sensorhub-security-oauth:[0.1,2.0)'
}

distributions {
  main {
    baseName = 'osh-geoint'
    contents {
      from 'scripts'
      from 'config'
      from 'README.md'
      into('web') {
        from 'web'
      }
      into('lib') {
        from project.configurations.compileClasspath
      }
    }
  }
}

task testIncludedBuilds {
    dependsOn gradle.includedBuild('osh-core').task(':sensorhub-core:test')
    dependsOn gradle.includedBuild('osh-core').task(':sensorhub-service-swe:test')
    dependsOn gradle.includedBuild('osh-core').task(':sensorhub-storage-perst:test')
    dependsOn gradle.includedBuild('osh-core').task(':sensorhub-webui-core:test')
    dependsOn gradle.includedBuild('osh-core').task(':sensorhub-tools:test')
    dependsOn gradle.includedBuild('osh-sensors').task(':sensorhub-driver-fakeweather:test')
    dependsOn gradle.includedBuild('osh-persistence').task(':sensorhub-storage-es:test')
    dependsOn gradle.includedBuild('osh-security').task(':sensorhub-security-oauth:test')
}
test.dependsOn testIncludedBuilds
